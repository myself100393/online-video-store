/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package market.dao;

import market.dto.*;
import market.exceptions.*;

public interface LineItemDao
{
	/** 
	 * Inserts a new row in the LineItem table.
	 */
	public LineItemPk insert(LineItem dto) throws LineItemDaoException;

	/** 
	 * Updates a single row in the LineItem table.
	 */
	public void update(LineItemPk pk, LineItem dto) throws LineItemDaoException;

	/** 
	 * Deletes a single row in the LineItem table.
	 */
	public void delete(LineItemPk pk) throws LineItemDaoException;

	/** 
	 * Returns the rows from the LineItem table that matches the specified primary-key value.
	 */
	public LineItem findByPrimaryKey(LineItemPk pk) throws LineItemDaoException;

	/** 
	 * Returns all rows from the LineItem table that match the criteria 'id = :id'.
	 */
	public LineItem findByPrimaryKey(int id) throws LineItemDaoException;

	/** 
	 * Returns all rows from the LineItem table that match the criteria ''.
	 */
	public LineItem[] findAll() throws LineItemDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the LineItem table that match the specified arbitrary SQL statement
	 */
	public LineItem[] findByDynamicSelect(String sql, Object[] sqlParams) throws LineItemDaoException;

	/** 
	 * Returns all rows from the LineItem table that match the specified arbitrary SQL statement
	 */
	public LineItem[] findByDynamicWhere(String sql, Object[] sqlParams) throws LineItemDaoException;

}
