/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package market.dao;

import java.util.Date;
import market.dto.*;
import market.exceptions.*;

public interface CartDao
{
	/** 
	 * Inserts a new row in the Cart table.
	 */
	public CartPk insert(Cart dto) throws CartDaoException;

	/** 
	 * Updates a single row in the Cart table.
	 */
	public void update( Cart dto) throws CartDaoException;

	/** 
	 * Deletes a single row in the Cart table.
	 */
	public void delete(CartPk pk) throws CartDaoException;

	/** 
	 * Returns the rows from the Cart table that matches the specified primary-key value.
	 */
	public Cart findByPrimaryKey(CartPk pk) throws CartDaoException;

	/** 
	 * Returns all rows from the Cart table that match the criteria 'account_id = :accountId AND line_item_id = :lineItemId'.
	 */
	public Cart findByPrimaryKey(int accountId, int lineItemId) throws CartDaoException;

	/** 
	 * Returns all rows from the Cart table that match the criteria ''.
	 */
	public Cart[] findAll() throws CartDaoException;
	public Cart[] findAll(int accountId) throws CartDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the Cart table that match the specified arbitrary SQL statement
	 */
	public Cart[] findByDynamicSelect(String sql, Object[] sqlParams) throws CartDaoException;

	/** 
	 * Returns all rows from the Cart table that match the specified arbitrary SQL statement
	 */
	public Cart[] findByDynamicWhere(String sql, Object[] sqlParams) throws CartDaoException;

}
